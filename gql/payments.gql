extend type Query {
  payment_initializeTransaction(
    channels: [PaymentChannel]!
    amount: Float!
    description: PaymentDescription!
  ): String!

  payment_fetchCharge(amount: Float!): PaymentChargeResponse!
  payment_getBanks: [GeneralBank]
}

extend type Mutation {
  payment_withdrawFromWalletToBank(amount: Float!, bankId: ID!): DefaultResponse!
}

type GeneralBank {
  name: String!
  code: String!
}

type PaymentChargeResponse {
  "Amount + payment provider charge"
  transactionAmount: Float!
  "Amount without charge"
  amount: Float!
  "Payment provider charge"
  ppc: Float!
}

enum PaymentChannel {
  card
  bank_transfer
}

enum PaymentDescription {
  Add_Card
  Topup_Wallet
}
